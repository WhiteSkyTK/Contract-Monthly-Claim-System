// <auto-generated />
using System;
using Contract_Monthly_Claim_System.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Contract_Monthly_Claim_System.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.AcademicManager", b =>
                {
                    b.Property<int>("ManagerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerID"));

                    b.Property<string>("ManagerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerID");

                    b.ToTable("AcademicManagers");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.ApprovalProcess", b =>
                {
                    b.Property<int>("ApprovalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalID"));

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClaimID")
                        .HasColumnType("int");

                    b.Property<int>("CoordinatorID")
                        .HasColumnType("int");

                    b.Property<int>("ManagerID")
                        .HasColumnType("int");

                    b.HasKey("ApprovalID");

                    b.HasIndex("ClaimID");

                    b.HasIndex("CoordinatorID");

                    b.HasIndex("ManagerID");

                    b.ToTable("ApprovalProcesses");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.Claims", b =>
                {
                    b.Property<int>("ClaimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimID"));

                    b.Property<int>("CoordinatorID")
                        .HasColumnType("int");

                    b.Property<int>("CoordintorID")
                        .HasColumnType("int");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("int");

                    b.Property<int>("LecturerID")
                        .HasColumnType("int");

                    b.Property<int>("ManagerID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ClaimID");

                    b.HasIndex("CoordintorID");

                    b.HasIndex("LecturerID");

                    b.HasIndex("ManagerID");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.ClaimsModules", b =>
                {
                    b.Property<int>("ClaimsModulesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimsModulesID"));

                    b.Property<int>("ClaimID")
                        .HasColumnType("int");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClaimsModulesID");

                    b.HasIndex("ClaimID");

                    b.HasIndex("ModuleCode");

                    b.ToTable("ClaimsModules");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.Lecturer", b =>
                {
                    b.Property<int>("LecturerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LecturerID"));

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LecturerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LecturerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LecturerSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LecturerID");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.LecturerModules", b =>
                {
                    b.Property<int>("LecturerModulesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LecturerModulesID"));

                    b.Property<int>("LecturerID")
                        .HasColumnType("int");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LecturerModulesID");

                    b.HasIndex("LecturerID");

                    b.HasIndex("ModuleCode");

                    b.ToTable("LecturerModules");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.Module", b =>
                {
                    b.Property<string>("ModuleCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LecturerID")
                        .HasColumnType("int");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuleCode");

                    b.HasIndex("LecturerID");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.ProgrammeCoordintor", b =>
                {
                    b.Property<int>("CoordintorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoordintorID"));

                    b.Property<string>("CoordintorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoordintorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoordintorID");

                    b.ToTable("ProgrammeCoordinators");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.SupportingDocuments", b =>
                {
                    b.Property<int>("DocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentID"));

                    b.Property<int>("ClaimID")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploaddDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentID");

                    b.HasIndex("ClaimID");

                    b.ToTable("SupportingDocuments");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.Users", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userID"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.ApprovalProcess", b =>
                {
                    b.HasOne("Contract_Monthly_Claim_System.Models.Claims", "Claims")
                        .WithMany("ApprovalProcesses")
                        .HasForeignKey("ClaimID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Contract_Monthly_Claim_System.Models.ProgrammeCoordintor", "Coordinator")
                        .WithMany("ApprovalProcesses")
                        .HasForeignKey("CoordinatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Contract_Monthly_Claim_System.Models.AcademicManager", "Manager")
                        .WithMany("ApprovalProcesses")
                        .HasForeignKey("ManagerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claims");

                    b.Navigation("Coordinator");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.Claims", b =>
                {
                    b.HasOne("Contract_Monthly_Claim_System.Models.ProgrammeCoordintor", "Coordintor")
                        .WithMany("Claims")
                        .HasForeignKey("CoordintorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Contract_Monthly_Claim_System.Models.Lecturer", "Lecturer")
                        .WithMany("Claims")
                        .HasForeignKey("LecturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Contract_Monthly_Claim_System.Models.AcademicManager", "Manager")
                        .WithMany("Claims")
                        .HasForeignKey("ManagerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordintor");

                    b.Navigation("Lecturer");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.ClaimsModules", b =>
                {
                    b.HasOne("Contract_Monthly_Claim_System.Models.Claims", "Claims")
                        .WithMany()
                        .HasForeignKey("ClaimID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Contract_Monthly_Claim_System.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claims");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.LecturerModules", b =>
                {
                    b.HasOne("Contract_Monthly_Claim_System.Models.Lecturer", "Lecturer")
                        .WithMany("LecturerModules")
                        .HasForeignKey("LecturerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Contract_Monthly_Claim_System.Models.Module", "Module")
                        .WithMany("LecturerModules")
                        .HasForeignKey("ModuleCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.Module", b =>
                {
                    b.HasOne("Contract_Monthly_Claim_System.Models.Lecturer", null)
                        .WithMany("Modules")
                        .HasForeignKey("LecturerID");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.SupportingDocuments", b =>
                {
                    b.HasOne("Contract_Monthly_Claim_System.Models.Claims", "Claims")
                        .WithMany()
                        .HasForeignKey("ClaimID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.AcademicManager", b =>
                {
                    b.Navigation("ApprovalProcesses");

                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.Claims", b =>
                {
                    b.Navigation("ApprovalProcesses");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.Lecturer", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("LecturerModules");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.Module", b =>
                {
                    b.Navigation("LecturerModules");
                });

            modelBuilder.Entity("Contract_Monthly_Claim_System.Models.ProgrammeCoordintor", b =>
                {
                    b.Navigation("ApprovalProcesses");

                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
