@model IEnumerable<Claims>

@{
    ViewData["Title"] = "Closed Claims";
}

<div class="container">
    <h1 class="text-center animated-title">Closed Claims</h1>

    <div class="view-toggle mb-3">
        <button id="listViewBtn" class="btn btn-outline-primary active-btn">List View</button>
        <button id="gridViewBtn" class="btn btn-outline-secondary">Grid View</button>
    </div>

    <div id="claimsContainer" class="row list-view">
        @if (Model != null && Model.Any())
        {
            @foreach (var claim in Model)
            {
                <div class="col-md-12 col-lg-4 mb-4 claim-item animated-claim">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Claim ID: @claim.ClaimID</h5>
                            <p><strong>Submitted by:</strong> @claim.Lecturer.LecturerName @claim.Lecturer.LecturerSurname</p>
                            <p><strong>Modules:</strong> @string.Join(", ", claim.ClaimsModules.Select(m => m.Module.ModuleName))</p>
                            <p><strong>Hours Worked:</strong> @claim.HoursWorked</p>
                            <p><strong>Hourly Rate:</strong> R @claim.HourlyRate</p>
                            <p><strong>Total Claim Amount:</strong> R @(claim.HoursWorked * claim.HourlyRate)</p>
                            <p><strong>Status:</strong> <span class="status-text">@claim.Status</span></p>
                            <p><strong>Additional Notes:</strong> @claim.AdditionalNotes</p>
                            <p><strong>Submitted on:</strong> @claim.SubmissionDate.ToString("yyyy-MM-dd")</p>
                            <p><strong>Submitted Documents:</strong></p>
                            <ul>
                                @foreach (var document in claim.SupportingDocuments)
                                {
                                    <li><a href="@Url.Content(document.FilePath)" target="_blank">@document.DocumentName</a></li>
                                }
                            </ul>

                            @if (claim.Status == "Rejected")
                            {
                                <p><strong>Feedback:</strong> <span class="text-danger">@claim.RejectionFeedback</span></p>
                            }

                            <div class="progress mt-2">
                                <div class="progress-bar @GetProgressBarClass(claim.Status)" role="progressbar" style="width: @(GetProgressPercentage(claim.Status))%" aria-valuenow="@GetProgressPercentage(claim.Status)" aria-valuemin="0" aria-valuemax="100">
                                    <span class="dancing-text">@claim.Status</span>
                                    <div class="progress-bar-overlay"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-info" role="alert">
                    No closed claims found.
                </div>
            </div>
        }
    </div>
</div>


@functions {
    private string GetProgressBarClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning",
            "Approved" => "bg-success",
            "Rejected" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private int GetProgressPercentage(string status)
    {
        return status switch
        {
            "Pending" => 50,
            "Approved" => 100,
            "Rejected" => 100,
            _ => 0
        };
    }
}

<style>
    /* Basic styling and animation */
    .container {
        margin-top: 20px;
        animation: fadeIn 0.8s ease-in-out;
    }

    .view-toggle {
        display: flex;
        justify-content: flex-end;
    }

    .btn {
        margin-left: 10px;
        transition: all 0.3s ease;
    }

        .btn:hover {
            background-color: #DE1B38;
            color: white;
            transform: scale(1.05);
        }

    .active-btn {
        background-color: #DE1B38;
        color: white;
    }

    .animated-title {
        animation: bounceText 2s infinite alternate;
    }

    @@keyframes bounceText {
        0% {
            transform: translateY(0);
        }

        50% {
            transform: translateY(-5px);
        }

        100% {
            transform: translateY(0);
        }
    }

    .card {
        border: 1px solid #DE1B38;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

        .card:hover {
            transform: scale(1.02);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

    .progress {
        height: 1.5rem;
        margin-top: 0.5rem;
        position: relative;
        overflow: hidden;
    }

    /* Progress bar overlay */
    .progress-bar-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.3);
        transform: translateX(-100%);
        animation: loadOverlay 4s linear infinite;
    }

    @@keyframes loadOverlay {
        0% {
            transform: translateX(-100%);
        }

        100% {
            transform: translateX(100%);
        }
    }

    .dancing-text {
        display: inline-block;
        animation: bounce 1.5s ease-in-out infinite alternate;
    }

    @@keyframes bounce {
        0%, 100% {
            transform: translateY(0);
        }

        50% {
            transform: translateY(-4px);
        }
    }

    /* Fade-in animation */
    .claim-item {
        animation: fadeIn 1s ease-in-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .feedback-container {
        display: flex;
        flex-direction: column;
        width: 100%; /* Full width */
        animation: fadeIn 0.5s ease-in-out; /* Fade-in animation for feedback */
    }

    /* Grid and List View Styling */
    .list-view .claim-item {
        display: block;
        width: 100%;
    }

    .grid-view .claim-item {
        width: calc(33.333% - 20px);
    }
</style>

<script>
    document.getElementById('listViewBtn').addEventListener('click', function () {
        document.getElementById('claimsContainer').classList.remove('grid-view');
        document.getElementById('claimsContainer').classList.add('list-view');
        this.classList.add('active-btn');
        document.getElementById('gridViewBtn').classList.remove('active-btn');
    });

    document.getElementById('gridViewBtn').addEventListener('click', function () {
        document.getElementById('claimsContainer').classList.remove('list-view');
        document.getElementById('claimsContainer').classList.add('grid-view');
        this.classList.add('active-btn');
        document.getElementById('listViewBtn').classList.remove('active-btn');
    });

    // Toggle feedback field for reject button
    document.querySelectorAll('.toggle-feedback').forEach(button => {
        button.addEventListener('click', function () {
            this.nextElementSibling.classList.toggle('d-none');
            // Optionally, add animations here if needed
        });
    });
</script>
