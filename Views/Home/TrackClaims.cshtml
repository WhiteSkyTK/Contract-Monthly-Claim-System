@model List<ClaimSubmissionInfo>
@using System.Security.Claims
@using System.Linq

@{
    ViewData["Title"] = "Track Claims";
    var userIdString = User.FindFirstValue(ClaimTypes.NameIdentifier); // Get the current user's ID
    var userId = userIdString; // Keep as a string
    var claimSubmissionInfos = ViewBag.ClaimSubmissionInfos as List<ClaimSubmissionInfo>; // Cast ViewBag.Claims to the correct type
}

<div class="container">
    <h1 class="text-center">Track Your Claims</h1>

    <div class="view-toggle mb-3">
        <button id="listViewBtn" class="btn btn-outline-primary active-btn">List View</button>
        <button id="gridViewBtn" class="btn btn-outline-secondary">Grid View</button>
    </div>

    <div id="claimsContainer" class="row list-view">
        @if (claimSubmissionInfos != null && claimSubmissionInfos.Any())
        {
            var userClaims = claimSubmissionInfos.Where(c => c.LecturerID.ToString() == userId);

            if (!userClaims.Any())
            {
                <div class="col-12">
                    <div class="alert alert-info" role="alert">
                        No claims found for you. Please submit your claims to track their status.
                    </div>
                </div>
            }
            else
            {
                foreach (var submissionInfo in userClaims)
                {
                    <div class="col-md-12 mb-4 claim-item">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Claim ID: @submissionInfo.Claim.ClaimID</h5>
                                <p><strong>Status:</strong> <span class="status-text">@submissionInfo.Claim.Status</span></p>
                                <p><strong>Modules:</strong></p>
                                <ul>
                                    @foreach (var module in submissionInfo.SelectedModules)
                                    {
                                        <li>@module</li>
                                    }
                                </ul>
                                <p><strong>Hours Worked:</strong> @submissionInfo.Claim.HoursWorked</p>
                                <p><strong>Hourly Rate:</strong> R @submissionInfo.Claim.HourlyRate.ToString("F2")</p>
                                <p><strong>Total Amount:</strong> R @submissionInfo.Claim.TotalClaimAmount</p>

                                @if (submissionInfo.ApprovalProcess != null)
                                {
                                    <p><strong>Feedback:</strong> @submissionInfo.ApprovalProcess.Feedback</p>
                                    <p><strong>Approved/Rejected On:</strong> @submissionInfo.ApprovalProcess.ApprovalDate.ToString("dd MMM yyyy")</p>
                                    <p><strong>Program Coordinator:</strong> @submissionInfo.ApprovalProcess.Coordinator?.CoordinatorName @submissionInfo.ApprovalProcess.Coordinator?.CoordinatorSurname</p>
                                    <p><strong>Academic Manager:</strong> @submissionInfo.ApprovalProcess.Manager?.ManagerName @submissionInfo.ApprovalProcess.Manager?.ManagerSurname</p>
                                }
                                else
                                {
                                    <p><strong>Approval Process:</strong> Not yet started</p>
                                }
                                <div class="progress">
                                    <div class="progress-bar @GetProgressBarClass(submissionInfo.Claim.Status)" role="progressbar" style="width: @(GetProgressPercentage(submissionInfo.Claim.Status))%" aria-valuenow="@GetProgressPercentage(submissionInfo.Claim.Status)" aria-valuemin="0" aria-valuemax="100">
                                        @submissionInfo.Claim.Status
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-info" role="alert">
                    No claims found. Please submit your claims to track their status.
                </div>
            </div>
        }
    </div>



@functions {
    private string GetProgressBarClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning",
            "Approved" => "bg-success",
            "Rejected" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private int GetProgressPercentage(string status)
    {
        return status switch
        {
            "Pending" => 50,
            "Approved" => 100,
            "Rejected" => 95,
            _ => 0
        };
    }
}

<style>
    body {
        background-color: #f8f9fa; /* Light background color for the page */
    }

    .container {
        margin-top: 20px;
    }

    .view-toggle {
        margin-bottom: 20px;
        display: flex;
        justify-content: flex-end; /* Align buttons to the right */
    }

    .btn {
        margin-left: 10px; /* Space between buttons */
    }

    .active-btn {
        background-color: #DE1B38; /* Active button color */
        color: white; /* Text color for active button */
    }

    /* Default view (List View) */
    .list-view .claim-item {
        display: block;
        width: 100%; /* Full width for list view */
    }

    /* Grid View layout */
    .grid-view .claim-item {
        display: flex;
        flex-direction: column;
        width: calc(33.333% - 20px); /* Three items per row */
        margin-right: 10px;
        margin-left: 10px;
    }

    /* Styling for cards */
    .card {
        border: 1px solid #DE1B38;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow for cards */
    }

    /* Status bar and progress */
    .status-text {
        font-weight: bold;
    }

    .progress {
        height: 1.5rem;
        margin-top: 0.5rem;
    }

    ul {
        list-style-type: disc;
        margin-left: 20px;
    }
</style>

<script>
    // JavaScript to toggle between List and Grid view
    document.getElementById('listViewBtn').addEventListener('click', function () {
        document.getElementById('claimsContainer').classList.remove('grid-view');
        document.getElementById('claimsContainer').classList.add('list-view');
        this.classList.add('active-btn'); // Set this button as active
        document.getElementById('gridViewBtn').classList.remove('active-btn'); // Remove active from grid button
    });

    document.getElementById('gridViewBtn').addEventListener('click', function () {
        document.getElementById('claimsContainer').classList.remove('list-view');
        document.getElementById('claimsContainer').classList.add('grid-view');
        this.classList.add('active-btn'); // Set this button as active
        document.getElementById('listViewBtn').classList.remove('active-btn'); // Remove active from list button
    });
</script>
